serviceMeshControlPlane: 
  name: robotorium-servicemesh
techPreview:
  global:
    proxy:
      holdApplicationUntilProxyStarts: true

general:
  logging:
    logLevels: warning
    logAsJSON: false
  validationMessages: true

security:
  controlPlane:
    mtls: true
    tls: 
      minProtocolVersion: TLSv1_2
  dataPlane: 
    mtls: true

tracing:
  sampling: 10000
  type: Jaeger

profiles: 
  default: default

proxy:
  accessLogging:
    file: 
      name: /dev/stdout
  networking:
    trafficControl:
      outbound:
        policy: REGISTRY_ONLY
  runtime:
    container:
      resources:
        limits:
          cpu: 120m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi

gateways:
  egress:
    enabled: true
    runtime:
      deployment: 
        autoScaling:
          enabled: true
          minReplicas: 2
          maxReplicas: 10
          targetCPUUtilizationPercentage: 80
      container:
        resources:
          limits:
            cpu: 120m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
  ingress:
    enabled: true
    runtime:
      deployment: 
        autoScaling:
          enabled: true
          minReplicas: 2
          maxReplicas: 10
          targetCPUUtilizationPercentage: 80
      container:
        resources:
          limits:
            cpu: 120m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
  openshiftRoute:
    enabled: true

policy:
  type: Istiod
addons:
  grafana:
    enabled: false
  jaeger:
    install:
      ingress:
        enabled: true
      storage:
        type: Elasticsearch
        elasticsearch:
          nodeCount: 3
          redundancyPolicy: SingleRedundancy
          storage:
            size: "3Gi"
            esIndexCleaner:
              enabled: true
              numberOfDays: 14
              schedule: "55 23 * * *"
  kiali:
    enabled: true
    install:
      service:
        ingress:
          enabled: true
  prometheus:
    enabled: true
    install:
      service:
        ingress:
          enabled: true

version: v2.4

runtime:
  components:
    tracing:
      jaeger:
        elasticsearch:
          container:
            resources:
              requests:
                memory: "1Gi"
                cpu: "500m"
              limits:
                memory: "1Gi"
                cpu: "500m"
    pilot:
      deployment: 
        autoScaling:
          enabled: true
          minReplicas: 2
          maxReplicas: 10
          targetCPUUtilizationPercentage: 80
      container:
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 50m
            memory: 128Mi
    prometheus:
      container:
        resources:
          limits:
            cpu: 100m
            memory: 1Gi
          requests:
            cpu: 50m
            memory: 512Mi
  defaults:
    container:
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 50m
          memory: 128Mi
          
telemetry:
  type: Istiod