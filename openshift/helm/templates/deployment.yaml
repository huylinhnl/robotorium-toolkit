apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    image.openshift.io/triggers: |-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "{{ .Values.imageStream.name }}:{{.Values.imageStream.tag }}"
          },
          "fieldPath": "spec.template.spec.containers[0].image"
        }
      ]
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        # sidecar.istio.io/inject: 'true'
        # traffic.sidecar.istio.io/excludeOutboundIPRanges: "172.30.0.1/32"
    spec:
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.imageStream.name }}:{{.Values.imageStream.tag }}"
          resources:
              requests:
                cpu: 100m
                memory: "100Mi"
              limits:
                cpu: 200m
                memory: "150Mi" 
          ports:
            - name: robo-toolkit
              containerPort: 8080
              protocol: TCP                
          env:
            - name: ASPNETCORE_URLS
              value: "http://*:8080"
          volumeMounts:
            - mountPath: /app/appsettings.json
              name: appsettings-volume
              subPath: appsettings.json

        # - name: oauth-proxy
        #   image: >-
        #     quay.io/openshift/origin-oauth-proxy:4.13
        #   args:
        #     - -provider=openshift
        #     - -https-address=:8888
        #     - -http-address=
        #     - -email-domain=*
        #     - -upstream=http://localhost:8080
        #     - -tls-cert=/etc/tls/private/tls.crt
        #     - -tls-key=/etc/tls/private/tls.key
        #     - -cookie-secret-file=/etc/proxy/secrets/session_secret
        #     - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        #     - -openshift-service-account={{ .Values.serviceAccount }}
        #     - -skip-auth-regex=^/metrics
        #     - -openshift-sar={"resource":"namespaces","resourceName":"{{ .Values.namespace }}","namespace":"{{ .Values.namespace }}","verb":"get"}
        #   ports:
        #     - name: oauth-proxy
        #       containerPort: 8888    
        #       protocol: TCP
          volumeMounts:
            - mountPath: /etc/tls/private
              name: secret-{{ .Values.name }}-tls
            - mountPath: /etc/proxy/secrets
              name: {{ .Values.name }}-proxy    
                       
      imagePullSecrets:
        - name: artifactory-pullsecret
      serviceAccountName: {{ .Values.serviceAccount }}        
      volumes:
      - name: appsettings-volume
        configMap:
          name: appsettings-{{ .Values.name }}
          items:
            - key: appsettings.json
              path: appsettings.json
      - name: {{ .Values.name }}-proxy
        secret:
            defaultMode: 420
            secretName: {{ .Values.name }}-proxy       
      - name: secret-{{ .Values.name }}-tls
        secret:
            defaultMode: 420
            secretName: toolkit-tls                   

