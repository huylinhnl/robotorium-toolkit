apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  annotations:
    image.openshift.io/triggers: |-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "{{ .Values.imageStream.name }}:{{.Values.imageStream.tag }}"
          },
          "fieldPath": "spec.template.spec.containers[0].image"
        }
      ]
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        # sidecar.istio.io/inject: 'true'
        # traffic.sidecar.istio.io/excludeOutboundIPRanges: "172.30.0.1/32"
    spec:
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.imageStream.name }}:{{.Values.imageStream.tag }}"
          resources:
              requests:
                cpu: 100m
                memory: "100Mi"
              limits:
                cpu: 200m
                memory: "150Mi" 
          # ports:
          #   - containerPort: 8080
          #     protocol: TCP                
          env:
            - name: ASPNETCORE_URLS
              value: "https://*:8080"
            - name: ASPNETCORE_Kestrel__Certificates__Default__Password
              value: ""              
            - name: ASPNETCORE_Kestrel__Certificates__Default__Path
              value: "/app/cert.pfx"              
          volumeMounts:
            - mountPath: /app/appsettings.json
              name: appsettings-volume
              subPath: appsettings.json
            - name: certificatesvolume
              mountPath: /app/cert.pfx
              subPath: cert.pfx
              readOnly: true

        - name: oauth-proxy
          image: >-
            quay.io/openshift/origin-oauth-proxy:4.13
          args:
            - -provider=openshift
            - -https-address=
            - -http-address=:8888
            - -email-domain=*
            - -upstream=http://127.0.0.1:8080
            - -tls-cert=/etc/tls/private/tls.crt
            - -custom-templates-dir=/custom-templates-dir
            - -tls-key=/etc/tls/private/tls.key
            - -cookie-secret-file=/etc/proxy/secrets/session_secret
            - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - -openshift-service-account={{ .Values.serviceAccount }}
            - -skip-auth-regex=^/var/www/static/
            - -request-logging=true
            # - -openshift-sar={"resource":"namespaces","resourceName":"{{ .Values.namespace }}","namespace":"{{ .Values.namespace }}","verb":"get"}
          ports:
            - name: oauth-proxy
              containerPort: 8888    
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/tls/private
              name: secret-{{ .Values.name }}-tls
            - mountPath: /etc/proxy/secrets
              name: {{ .Values.name }}-proxy    
            - name: signin
              mountPath: /custom-templates-dir/sign_in.html   
              subPath: sign_in.html    
            - name: error
              mountPath: /custom-templates-dir/error.html 
              subPath: error.html    
            - name: icon
              mountPath:  /var/www/static/a.png
              subPath: a.png
                       
      imagePullSecrets:
        - name: artifactory-pullsecret
      serviceAccountName: {{ .Values.serviceAccount }}        
      volumes:
      - name: appsettings-volume
        configMap:
          name: appsettings-{{ .Values.name }}
          items:
            - key: appsettings.json
              path: appsettings.json
      - name: {{ .Values.name }}-proxy
        secret:
            defaultMode: 420
            secretName: {{ .Values.name }}-proxy       
      - name: secret-{{ .Values.name }}-tls
        secret:
            defaultMode: 420
            secretName: toolkit-tls       
      - name: certificatesvolume
        secret:
          secretName: robo-toolkit-secret
          items:
          - key: certificate
            path: cert.pfx                       

      - name: signin
        configMap:
            name: {{ .Values.name }}-signin
            items:
              - key: sign_in.html
                path: sign_in.html
            defaultMode: 420
      - name: error
        configMap:
            name: {{ .Values.name }}-error
            items:
              - key: error.html
                path: error.html
            defaultMode: 420
      - name: icon
        configMap:
            name: {{ .Values.name }}-icon
            items:
              - key: icon.ico
                path: icon.ico
            defaultMode: 420            